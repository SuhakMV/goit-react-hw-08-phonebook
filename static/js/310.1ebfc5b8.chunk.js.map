{"version":3,"file":"static/js/310.1ebfc5b8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","page/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactFilter_form__RBCmO\",\"label\":\"ContactFilter_label__qRVzC\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\nimport css from './ContactFilter.module.css';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <form className={css.form}>\n        <label className={css.label}>\n          Find contacts by name:\n          <input type=\"name\" onChange={onFilterChange}></input>\n        </label>\n      </form>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectShowModal = state => state.contacts.showModal;\n\nexport const selectUpdateContactId = state => state.contacts.updateContactId;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const items = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    let savedName = false;\n    items.forEach(element => {\n      if (\n        element.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      ) {\n        alert(`${form.elements.name.value} is already in contacts`);\n        savedName = true;\n      }\n    });\n    if (savedName) {\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact'</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"text\":\"Contact_text__Wq-3f\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { setShowModal, setUpdateContactId } from 'redux/contacts/slice';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  const showModal = () => {\n    dispatch(setShowModal(true));\n    dispatch(setUpdateContactId(id));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" className={css.button} onClick={showModal}>\n        Edit\n      </button>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\n\nexport const ContactList = () => {\n  const items = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n\n  let foundContacts = items.filter(item =>\n    item.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <div>\n      <ul>\n        {items.length > 0 ? (\n          foundContacts.map(({ id, name, number }) => (\n            <Contact key={id} id={id} name={name} number={number} />\n          ))\n        ) : (\n          <p>Contact list is empty</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\",\"form\":\"Modal_form__FEIVf\",\"label\":\"Modal_label__A0H75\",\"button\":\"Modal_button__PTCbC\",\"text\":\"Modal_text__KJZTz\",\"close\":\"Modal_close__V34Fj\",\"focus\":\"Modal_focus__oJjnh\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport { setShowModal } from 'redux/contacts/slice';\nimport { useEffect } from 'react';\nimport { selectUpdateContactId } from 'redux/contacts/selectors';\nimport css from './Modal.module.css';\n\nexport const Modal = () => {\n  const dispatch = useDispatch();\n  const showModal = () => dispatch(setShowModal(false));\n  const id = useSelector(selectUpdateContactId);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        showModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    //id: id,\n    const contact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    dispatch(updateContact({ id: id, ...contact }));\n    form.reset();\n    showModal();\n  };\n\n  return (\n    <div className={css.Overlay}>\n      <div className={css.Modal}>\n        <span className={css.close} onClick={showModal}>\n          &times;\n        </span>\n        <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n          <label className={css.label}>\n            <p className={css.text}>Name</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label className={css.label}>\n            <p className={css.text}>Number</p>\n\n            <input\n              type=\"text\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Edit contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Modal } from 'components/Modal/Modal';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading, selectShowModal } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const showModal = useSelector(selectShowModal);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>Your Contacts</Helmet>\n      <ContactForm />\n      <ContactFilter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n      {showModal && <Modal />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactFilter","dispatch","useDispatch","className","css","type","onChange","e","setFilter","target","value","selectLoading","state","contacts","isLoading","selectFilter","filter","selectAllContacts","items","selectShowModal","showModal","selectUpdateContactId","updateContactId","ContactForm","useSelector","onSubmit","preventDefault","form","currentTarget","savedName","forEach","element","name","toLowerCase","elements","alert","addContact","number","reset","autoComplete","pattern","title","required","Contact","id","onClick","setShowModal","setUpdateContactId","deleteContact","ContactList","foundContacts","item","includes","length","map","Modal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","contact","updateContact","fetchContacts","Helmet"],"sourceRoot":""}